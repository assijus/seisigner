
package br.jus.trf2.sei.assinador;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "assinadorService", targetNamespace = "assinadorns", wsdlLocation = "https://sei-homologa.trf2.jus.br/sei/controlador_ws.php?servico=assinador")
public class AssinadorService
    extends Service
{

    private final static URL ASSINADORSERVICE_WSDL_LOCATION;
    private final static WebServiceException ASSINADORSERVICE_EXCEPTION;
    private final static QName ASSINADORSERVICE_QNAME = new QName("assinadorns", "assinadorService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://sei-homologa.trf2.jus.br/sei/controlador_ws.php?servico=assinador");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ASSINADORSERVICE_WSDL_LOCATION = url;
        ASSINADORSERVICE_EXCEPTION = e;
    }

    public AssinadorService() {
        super(__getWsdlLocation(), ASSINADORSERVICE_QNAME);
    }

    public AssinadorService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ASSINADORSERVICE_QNAME, features);
    }

    public AssinadorService(URL wsdlLocation) {
        super(wsdlLocation, ASSINADORSERVICE_QNAME);
    }

    public AssinadorService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ASSINADORSERVICE_QNAME, features);
    }

    public AssinadorService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AssinadorService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AssinadorPortType
     */
    @WebEndpoint(name = "assinadorPortService")
    public AssinadorPortType getAssinadorPortService() {
        return super.getPort(new QName("assinadorns", "assinadorPortService"), AssinadorPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AssinadorPortType
     */
    @WebEndpoint(name = "assinadorPortService")
    public AssinadorPortType getAssinadorPortService(WebServiceFeature... features) {
        return super.getPort(new QName("assinadorns", "assinadorPortService"), AssinadorPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ASSINADORSERVICE_EXCEPTION!= null) {
            throw ASSINADORSERVICE_EXCEPTION;
        }
        return ASSINADORSERVICE_WSDL_LOCATION;
    }

}
